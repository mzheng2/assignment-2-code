import java.util.Scanner;

public class Game {

	private Scanner keyboard;
	private int PlayerNumber;
	private int playerOnesBankPoints = 0;
	private int playerTwosBankPoints = 0;
	private int playerThreesBankPoints = 0;
	private int playerFoursBankPoints = 0;
	private String playerOnesName = "ONE";
	private String playerTwosName = "TWO";
	private String playerThreesName = "THREE";
	private String playerFoursName = "FOUR";
	private Player One = new Player(playerOnesName, playerOnesBankPoints);
	private Player Two = new Player(playerTwosName, playerTwosBankPoints);
	private Player Three = new Player(playerThreesName, playerThreesBankPoints);
	private Player Four = new Player(playerFoursName, playerFoursBankPoints);
	private boolean turn = true;

	private Game() {
		askForNumberOfPlayers();
		if (PlayerNumber == 2) {
			2PlayerGame();
		} else if (PlayerNumber == 3) {
			3PlayerGame();
		} else if (PlayerNumber == 4) {
			4PlayerGame();
		}
	}

	private void askForNumberOfPlayers() {
		System.out.println("Please choose how many players there will be (2 - 4): ");
		keyboard = new Scanner(System.in);
		PlayerNumber = keyboard.nextInt();
		keyboard.nextLine();
	}
	
	private void 2PlayerGame(){
		while (true) {
			print2PlayerScore();
			playerOnesBankPoints = One.turn(turn);
			turn = true;
			print2PlayerScore();
			playerTwosBankPoints = Two.turn(turn);
			turn = true;
		}
	}
	
	private void 3PlayerGame(){
		while (true) {
			print3PlayerScore();
			playerOnesBankPoints = One.turn(turn);
			turn = true;
			print3PlayerScore();
			playerTwosBankPoints = Two.turn(turn);
			turn = true;
			print3PlayerScore();
			playerThreesBankPoints = Three.turn(turn);
			turn = true;
		}
	}
	
	private void 4PlayerGame(){
		while (true) {
			print4PlayerScore();
			playerOnesBankPoints = One.turn(turn);
			turn = true;
			print4PlayerScore();
			playerTwosBankPoints = Two.turn(turn);
			turn = true;
			print4PlayerScore();
			playerThreesBankPoints = Three.turn(turn);
			turn = true;
			print4PlayerScore();
			playerFoursBankPoints = Four.turn(turn);
			turn = true;
		}
	}

	private void printPlayerScore(String playerName, int playerBankPoints) {
		System.out.println("SCORES: PLAYER " + playerName + ": "
				+ playerBankPoints);
	}
	
	private void print2PlayerScore(){
		printPlayerScore(playerOnesName, playerOnesBankPoints);
		printPlayerScore(playerTwosName, playerTwosBankPoints);
	}
	
	private void print3PlayerScore(){
		printPlayerScore(playerOnesName, playerOnesBankPoints);
		printPlayerScore(playerTwosName, playerTwosBankPoints);
		printPlayerScore(playerThreesName, playerThreesBankPoints);
	}
	
	private void print4PlayerScore(){
		printPlayerScore(playerOnesName, playerOnesBankPoints);
		printPlayerScore(playerTwosName, playerTwosBankPoints);
		printPlayerScore(playerThreesName, playerThreesBankPoints);
		printPlayerScore(playerFoursName, playerFoursBankPoints);
	}
	

	public static void main(String[] args) {
		System.out.println("Welcome to THE GAME OF PIG!");
		new Game();
	}
}

import java.util.*;

public class Player {

	private Scanner keyboard;
	private String reply;
	private String playerName;
	private int playersCurrentPoints;
	private int playersBankPoints;
	private int dice;

	public Player(String playerName, int playersBankPoints){
		this.playerName = playerName;
		this.playersBankPoints = playersBankPoints;
		callPlayersName();
		playerMustRoll();
		playerReply();
	}

	public int turn(boolean playerTurn){
		while (playersTurn == true) {
			rollDice();
			if (dice == 1) {
				playerTurnOver();
				resetPlayersCurrentPoints();
				playersTurn = false;
			} else {
				playersCurrentPoints += dice;
				displayDiceRoll();
				displayPlayersCurrentScore();
				inputToContinueOrStop
			}
		}
	}
	
	public void inputToContinueOrStop(){
		continueOrStopTurn();
		playerReply();
		if (reply.equals("b")) {
			playersBankPoints += playersCurrentPoints;
			resetPlayersCurrentPoints();
			if (playersBankPoints >= 50) {
				playerWins();
			}
			playersTurn = false;
		} else {
			rollDice();
		}
	}
	
	public int rollDice() {
		Random rand = new Random();
		dice = rand.nextInt(6) + 1;
		return dice;
	}

	public void displayDiceRoll(){
		System.out.println("You have rolled a: " + dice);
	}
	
	public void playerReply(){
		keyboard = new Scanner(System.in);
		reply = keyboard.nextLine();
	}
	
	public void resetPlayersCurrentPoints(){
		playersCurrentPoints = 0;
	}

	public void callPlayersName(){
		System.out.println("It is PLAYER " + playerName + "'s turn.");
	}
	public void playerMustRoll(){
		System.out.println("Press any key to roll.");
	}
	
	public void continueOrStopTurn(){
		System.out.println("Press any key to roll or 'b' to bank points.");
	}
	
	public void playerTurnOver(){
		System.out.println("You have rolled a 1. Your turn is over");
	}
	
	public void displayPlayersCurrentScore(){
		System.out.println("PLAYER " + playerName
				+ "'s Current Points: "
				+ playersCurrentPoints);
	}
	
	public void playerWins(){
		System.out.println("PLAYER " + playerName + " has won!");
		System.exit(0);
	}
	
}
